version: '3.8'
volumes:
  files_volume:
    driver: local
services: 
  postgres:
    image: postgres
    restart: always
    volumes:
      - files_volume:/var/lib/postgresql/data
    environment: 
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=devops
      - POSTGRES_PASSWORD=devops
      - POSTGRES_DB=keycloak
    ports: 
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment: 
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "devops"
    ports:
      - "80:80"
    depends_on: 
       postgres:
          condition: service_healthy
  keycloak:
    image: quay.io/keycloak/keycloak:15.0.1
    command: ["-Djboss.http.port=8180"]
    expose:
      - "8180"
    ports:
      - "8180:8180"
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=devops
      - DB_SCHEMA=public
      - DB_PASSWORD=devops
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    depends_on:
       postgres:
          condition: service_healthy
  eureka-service:
    container_name: eureka
    expose:
      - "8761"
    build:
      context: ./eureka-service
      dockerfile: dockerfile-eureka
    ports: 
      - "8761:8761"
    depends_on:
      keycloak:
        condition: service_started
  bike-service:
    container_name: bike-service
    restart: always
    build:
      context: ./bike-service
      dockerfile: dockerfile-bike
    links:
      - eureka-service
      - keycloak
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.instance.preferIpAddress=true
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8180/auth/realms/microservices-realm
    ports: 
      - "9000:8761"
    depends_on:
       eureka-service:
          condition: service_started
       keycloak:
          condition: service_started
  car-service:
    container_name: car-service
    restart: always
    build:
      context: ./car-service
      dockerfile: dockerfile-car
    links:
      - eureka-service
      - keycloak
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.instance.prefer-ip-address=true
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8180/auth/realms/microservices-realm
    ports: 
      - "9001:8761"
    depends_on:
      eureka-service:
          condition: service_started
      keycloak:
          condition: service_started
  user-service:
    container_name: user-service
    restart: always
    build:
      context: ./user-service
      dockerfile: dockerfile-user
    links:
      - eureka-service
      - keycloak
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.instance.prefer-ip-address=true
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8180/auth/realms/microservices-realm
    ports: 
      - "9002:8761"
    depends_on:
      eureka-service:
         condition: service_started
      keycloak:
         condition: service_started
  gateway-service:
    container_name: gateway
    restart: always
    expose:
      - "8090"
    build:
      context: ./gateway-service
      dockerfile: dockerfile-gateway
    links:
      - eureka-service
      - keycloak
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
      - eureka.client.fetch-registry=true
      - eureka.client.register-with-eureka=true
      - eureka.instance.prefer-ip-address=true
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8180/auth/realms/microservices-realm
    ports: 
      - "8090:8090"
    depends_on:
      eureka-service:
        condition: service_started
      keycloak:
        condition: service_started
 
